openapi: 3.0.3
info:
  title: Cloud-iot
  description: Api definition for cloud iot service
  version: 1.0.0
paths:
  /device/add/{userId}/{deviceCode}:
    post:
      tags:
        - onboarding
      summary: Adding device to service
      description: Add device to pending list task -> 'Rejestracja urządzenia'
      operationId: addDeviceToPoolList
      parameters:
        - name: userId
          in: path
          description: unique ID of user
          required: true
          schema:
            type: integer
            format: int64
        - name: deviceCode
          in: path
          description: unique ID of device
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Successful operation
        '400':
          description: Bad parameters
  /device/connection/{deviceCode}:
    get:
      tags:
        - onboarding
      description: Endpoint for DEVICE! -> get device a topics to connect
      operationId: getConnection
      parameters:
        - name: deviceCode
          in: path
          description: unique ID of device
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
        '400':
          description: Bad parameters
        '404':
          description: Device not found
        '409':
          description: Device already added
  /device/all/{userId}:
    get:
      tags:
        - device
      description: Endpoint for getting all user devices  task -> 'Home screen'
      operationId: getAll
      parameters:
        - name: userId
          in: path
          description: unique ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Device'
        '400':
          description: Bad parameters
        '404':
          description: Device not found
  /device/{userId}/{deviceId}:
    get:
      tags:
        - device
      description: Endpoint for getting info of device task -> 'Status urządzenia'
      operationId: get
      parameters:
        - name: userId
          in: path
          description: unique ID of user
          required: true
          schema:
            type: integer
            format: int64
        - name: deviceId
          in: path
          description: unique ID of Device
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceStatus'
        '400':
          description: Bad parameters
        '404':
          description: Device not found
components:
  schemas:
    Connection:
      type: object
      properties:
        toDeviceTopic:
          type: string
        toServiceTopic:
          type: string
    Device:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        image:
          type: string
          format: uri
        status:
          description: device during onboarding is in status pending till device connect to backend
          type: string
          enum:
            - PENDING
            - READY
    ModelDouble:
      type: number
      format: double
    EnvInfo:
      type: object
      properties:
        temperature:
          $ref: '#/components/schemas/ModelDouble'
        humidity:
          $ref: '#/components/schemas/ModelDouble'
        pressure:
          $ref: '#/components/schemas/ModelDouble'
    DeviceStatus:
      type: object
      properties:
        device:
          $ref: '#/components/schemas/Device'
        envInfo:
          $ref: '#/components/schemas/EnvInfo'
        light:
          type: boolean
        doors:
          type: boolean
        heater:
          type: object
          properties:
            onOff:
              type: boolean
            setTemp:
              type: number
              format: double
        fan:
          type: boolean
        humidifier:
          type: boolean


